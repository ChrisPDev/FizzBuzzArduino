@page "/Arduino"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text.Json.Serialization

<PageTitle>Arduino</PageTitle>

<h3>Arduino</h3>

<div>
    @if (apiData != null)
    {
        @GenerateTable(apiData)
    }
    else
    {
        <p>Awaiting API data...</p>
    }
</div>

@code {
    private string[,] apiData;

    protected override async Task OnInitializedAsync()
    {
        await FetchDataFromApi();
    }

    private async Task FetchDataFromApi()
    {
        using var httpClient = new HttpClient();

        var response = await httpClient.GetAsync("https://fizzbuzzarduino.onrender.com/api/Game");

        if (response.IsSuccessStatusCode)
        {
            var jsonString = await response.Content.ReadAsStringAsync();

            var apiResponse = JsonSerializer.Deserialize<List<Game>>(jsonString);

            apiData = new string[apiResponse.Count, 4];

            for (int i = 0; i < apiResponse.Count; i++)
            {
                apiData[i, 0] = apiResponse[i].Id.ToString();
                apiData[i, 1] = apiResponse[i].answerStreak.ToString();
                apiData[i, 2] = apiResponse[i].CreatedAt.ToString("yyyy-MM-ddTHH:mm:ss.fffZ");
                apiData[i, 3] = apiResponse[i].UpdatedAt.ToString("yyyy-MM-ddTHH:mm:ss.fffZ");
            }

            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Failed to fetch data from API: " + response.ReasonPhrase);
        }
    }

    MarkupString GenerateTable(string[,] data)
    {
        string table = "<table class='table'>";

        table += "<thead class='table-dark'>";
        table += "<tr>";
        table += "<th class='text-center'>Id</th>";
        table += "<th class='text-center'>Score</th>";
        table += "<th class='text-center'>Created</th>";
        table += "<th class='text-center'>Updated</th>";
        table += "</tr>";
        table += "</thead>";
        table += "<tbody class='text-center'>";

        for (int i = 0; i < data.GetLength(0); i++)
        {
            table += "<tr>";
            for (int j = 0; j < data.GetLength(1); j++)
            {
                table += $"<td>{data[i, j]}</td>";
            }
            table += "</tr>";
        }

        table += "</tbody>";
        table += "</table>";

        return new MarkupString(table);
    }

    public class Common
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonPropertyName("createdAt")]
        public DateTime CreatedAt { get; set; }

        [JsonPropertyName("updatedAt")]
        public DateTime UpdatedAt { get; set; }
    }

    public class Game : Common
    {
        [JsonPropertyName("answerStreak")]
        public int answerStreak { get; set; }
    }
}
